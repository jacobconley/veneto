(* 
    =====
    Types
    =====
*)
type = (generic_identifier | struct | composite) type_ops; 

type_alias = 'type' generic_identifier '=' type ;

 
(* Struct literals *)
struct  = '{' [{ struct_field ^+ ',' }]  '}'     ;
struct_field = identifier ':' type                     ;


(* Composites *)
composite = c_array | c_tuple; 
c_array = type '[]' ;
c_tuple = '[' [{ type ^+ ',' }] ']' ; 


(* Type expressions *) 
type_ops = struct_ops ['?'];
(* These semantically can only be applied to a struct *)
struct_ops = [{ struct_mods }]
struct_mods = ('in' | 'out') '+' struct_body ;
